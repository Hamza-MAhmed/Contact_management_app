<!-- <!-- <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <h1>Contact Manger App <small>I personally use it everyday.</small></h1>
		<div class="features">
				<div class="features-btn">Read features and manual <span class="badge">important</span></div>
				<ul class="features-list">
					<li><b>No limits</b> contact List.</li>
					<li>Save all contacts by press on <b>save button</b> now it's saved on your local drive.</li>
					<li>Retrive your contact list anytime by press on <b>load button</b> easy access.</li>
					<li>Delete all your contact list anytime by press on <b>delete all button</b> it will delete premanently.</li>
					<li>Smart delete you can easily delete specific one contact by using <b>delete contact form</b> and write only first name then press <b>delete button</b>.</li>
					<li>Sorting by first name alphabet or phone number by press on their <b>tabs in table</b>.</li>
					<li><b>Smart sorting</b> since you use sort by alphabet or phone number it <b>automatically invoke save functionlity</b> which means when you load your contacts next time it gonna load as you sort it last time whether alphbet or phone num.</li>
					<li class="coming-soon">
							<h4>Coming Soon <span>stay Tuned</span></h4>
							<ul>
								<li>Search by name or phone number to make it easy to use for big contacts list.</li>
								<li>More table tabs for email, birthdate...etc</li>
								<li>Live edite capability to edit from the table itself.</li>
							</ul>
					</li>
			</ul>
		</div>
    <div class="fields-container">
        <div class="input-field name">
            <label>
                Name:
                <input type="text" placeholder="Given Name...">
            </label>
        </div>
        <div class="input-field family-name">
            <label>
                Family name:
                <input type="text" placeholder="Family Name...">
            </label>
        </div>
        <div class="input-field phone">
            <label>
                Phone:
                <input type="text" placeholder="Phone Num...">
            </label>
        </div>
    </div>
    <button type="button" class="add-cont">Add Contact</button>
		
		<div class="more-option">
			<div class="more-option-btn">More Option</div>
			<div class="option-container">
				<button type="button" class="delete-all">Delete All</button>
				<button type="button" class="save">Save</button>
				<button type="button" class="load">Load</button>
				<div class="delete-one">
					<label>Delete Contact:
						<input type="text" placeholder="Write full name...">
						<span>* Please write full name then delete button to delete specific contact.</span>
					</label>
					<button type="button" class="delete-one-btn">Delete</button>
				</div>
			</div>
		</div>
	
    <div class="contact-indx"></div>
    
</body>
</html> -->
<!-- 
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Document</title>
</head>
<body>
	<div class="delete-one">
		<form action="/contact/del_contact" method="post">
			<input type="hidden" name="_method" value="delete">
		<label>Delete Contact:
			<input type="text" name="fullname" placeholder="Write full name...">
			<span>* Please write full name then delete button to delete specific contact.</span>
			<input type="hidden" name="action" value="delete"> Hidden field to identify delete action
			<input type="submit" class="delete-one-btn" value="delete">

		</label>
		</form>
	</div>

	<script>
        document.getElementById('delete-one-btn').addEventListener('click', function() {
            const fullname = document.getElementById('fullname').value;
            fetch('/contact/del_contact', {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ fullname: fullname })
            })
            .then(response => {
                if (response.ok) {
                    return response.json();
                }
                throw new Error('Network response was not ok.');
            })
            .then(data => {
                console.log(data); // Handle success response
            })
            .catch(error => {
                console.error('Error:', error); // Handle error
            });
        });
    </script>
</body>
</html> --> 

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="/stylesheets/add_contact.css">
</head>
<body>
    <html lang="en">
    <h1>Contact Manger App <small>I personally use it everyday.</small></h1>
		
    <div class="fields-container">
        <form id="contactForm" action="/contact/del_contact" method="post">
            <input type="text" name="name" placeholder="username" id="name" class="detail" /><br />
            <input class="delete" type="submit" value="Delete contact">
            </form>
    </div>
		
    <script>
        document.getElementById('contactForm').addEventListener('submit', function(event) {
            // Get the values of required fields
            const name = document.getElementById('name').value.trim();        

            // Check if any required field is empty
            if (!name) {
                // Prevent form submission
                event.preventDefault();
                
                // Display an error message
                alert('Please fill out all required fields.');
            }
        });
    </script>
</body>
</html> 



   